[tox]
envlist = py, report, linters
isolated_build = true

[testenv]
# this list contains all executables from the dev-dependencies in pyproject.toml
# or see it as a list of the applications used down below
allowlist_externals =
    bandit
    bump2version
    coverage
    pylint
    ruff
    mypy
    pytest
commands =
    coverage run --module pytest

[testenv:report]
depends = linters
commands =
    coverage combine
    coverage report
    coverage html
    coverage xml

[testenv:ruff]
description = Lint, validate import order, enforce style guide compliance.
commands =
    ruff check .
    ruff format --check .

[testenv:pylint]
description = Lint the code, look for code smells.
commands = pylint --output-format=colorized -sn -rn src tests

[testenv:bandit]
skip_install = true
description = Check whether there are obvious security issues with codebase.
;skip B101, it's already checked by PyLint and can't be configured well in bandit (it complains about assert in tests).
;skip B106, it's already checked by ruff (S106), and you can't do multiple ignore comments on one line
commands = bandit -r src/ tests/ --quiet --skip B101,B106

[testenv:mypy]
description = Verify and control type hints within your source code
commands = mypy . --strict

[testenv:linters]
description = Apply various tools, see tox -a -v
skip_install = true
commands =
    {[testenv:ruff]commands}
    {[testenv:pylint]commands}
    {[testenv:bandit]commands}
    {[testenv:mypy]commands}
