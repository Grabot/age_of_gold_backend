apiVersion: v1
kind: Namespace
metadata:
  name: golden-age
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: golden-age
  name: example-redis-config
data:
  redis-config: |
    maxmemory 2mb
    maxmemory-policy allkeys-lru
---
apiVersion: v1
kind: Pod
metadata:
  namespace: golden-age
  name: redis
spec:
  containers:
  - name: redis
    image: redis:latest
    command:
      - redis-server
      - "/redis-master/redis.conf"
    env:
    - name: MASTER
      value: "true"
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
    volumeMounts:
    - mountPath: /redis-master-data
      name: data
    - mountPath: /redis-master
      name: config
  volumes:
    - name: data
      emptyDir: {}
    - name: config
      configMap:
        name: example-redis-config
        items:
        - key: redis-config
          path: redis.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapi-deployment
  namespace: golden-age
  labels:
    app: flaskapi
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flaskapi
  template:
    metadata:
      namespace: golden-age
      labels:
        app: flaskapi
    spec:
      containers:
        - name: flaskapi
          image: age_of_gold:1.01
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  namespace: golden-age
  name: flask-service
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: flaskapi
  type: LoadBalancer
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-db-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: service-postgres
  labels:
    name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: database
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: deployment-postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: database
    spec:
      terminationGracePeriodSeconds: 180
      containers:
        - name: postgres
          image: postgres:10.4
          ports:
            - name: tcp-5432
              containerPort: 5432
          env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: password
          - name: POSTGRES_DB
            value: database
          - name: POSTGRES_PORT
            value: 5432
          - name: POSTGRES_URL
            value: age_of_db
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data-storage-volume
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: "50m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
      volumes:
        - name: data-storage-volume
          persistentVolumeClaim:
            claimName: postgres-db-claim
---
# kubectl get pods -n golden-age
# minikube service flask-service -n golden-age